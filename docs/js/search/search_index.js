var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ChoiceSelectedEvent.html",[0,1.047,1,1.315]],["body/interfaces/ChoiceSelectedEvent.html",[0,0.972,1,1.221,2,0.499,3,0.392,4,0.301,5,0.499,6,1.034,7,1.003,8,0.627,9,1.555,10,1.793,11,2.319,12,1.684,13,0.092,14,1.555,15,0.907,16,1.903,17,1.555,18,0.466,19,1.221,20,2.144,21,0.788,22,1.903,23,1.555,24,2.144,25,1.903,26,0.301,27,1.555,28,0.972,29,0.788,30,1.003,31,1.003,32,0.744,33,0.608,34,0.392,35,0.788,36,0.972,37,0.788,38,0.608,39,0.907,40,1.684,41,2.144,42,0.499,43,0.627,44,0.392,45,0.392,46,0.788,47,1.555,48,1.555,49,1.45,50,1.003,51,1.003,52,1.003,53,0.788,54,0.052,55,1.555,56,1.003,57,1.003,58,0.471,59,1.003,60,1.003,61,1.495,62,1.003,63,0.788,64,0.499,65,1.003,66,0.499,67,1.003,68,1.903,69,1.003,70,1.003,71,1.684,72,1.003,73,1.555,74,1.903,75,1.003,76,1.221,77,1.003,78,1.534,79,0.972,80,1.003,81,1.555,82,1.003,83,0.788,84,1.003,85,0.788,86,1.003,87,1.003,88,1.003,89,1.003,90,2.077,91,1.555,92,1.003,93,1.555,94,1.003,95,1.003,96,1.003,97,1.003,98,1.003,99,0.627,100,1.555,101,1.003,102,1.003,103,1.003,104,1.003,105,2.645,106,1.003,107,1.903,108,2.253,109,1.555,110,2.144,111,1.003,112,1.555,113,1.221,114,1.903,115,1.003,116,1.003,117,1.003,118,1.003,119,1.003,120,1.003,121,1.003,122,1.555,123,1.003,124,1.003,125,0.788,126,1.003,127,1.555,128,1.003,129,1.903,130,1.003,131,1.495,132,1.221,133,1.003,134,1.003,135,1.003,136,1.003,137,1.555,138,1.003,139,1.003,140,0.788,141,1.555,142,2.144,143,1.003,144,1.003,145,1.003,146,1.003,147,1.003,148,1.003,149,1.003,150,1.003,151,1.003,152,1.003,153,1.003,154,1.003,155,1.003,156,1.003,157,1.555,158,1.003,159,1.003,160,1.003,161,1.003,162,1.003,163,1.003,164,1.003,165,1.003,166,1.003,167,1.003,168,1.003,169,0.042]],["title/components/TextInputAutocompleteContainerComponent.html",[58,0.368,170,1.047]],["body/components/TextInputAutocompleteContainerComponent.html",[2,0.973,3,0.764,4,0.586,5,0.973,6,1.132,13,0.09,15,0.764,18,0.748,26,0.586,32,0.764,33,1.075,34,1.132,38,0.764,42,1.489,43,1.223,44,0.764,45,0.764,54,0.068,58,0.658,66,1.242,169,0.068,170,1.812,171,1.956,172,1.956,173,2.592,174,1.536,175,2.16,176,3.309,177,2.496,178,3.309,179,2.496,180,3.309,181,2.496,182,2.496,183,1.956,184,2.496,185,1.961,186,2.897,187,1.956,188,2.16,189,1.956,190,1.956]],["title/directives/TextInputAutocompleteDirective.html",[18,0.502,45,0.654]],["body/directives/TextInputAutocompleteDirective.html",[0,0.509,1,0.639,2,0.405,3,0.318,4,0.244,5,1.374,6,1.188,7,0.814,8,0.509,10,1.752,11,1.317,12,1.76,13,0.092,15,0.819,16,2.241,17,1.317,18,0.497,19,1.498,20,2.359,21,1.303,22,2.359,23,1.659,24,2.241,25,2.359,26,0.244,27,1.317,28,0.824,29,0.639,30,0.814,31,0.814,32,0.819,33,0.649,34,0.318,35,0.639,36,0.824,37,0.639,38,0.515,39,0.819,40,1.498,41,1.907,42,0.655,43,0.824,44,0.318,45,0.515,46,1.035,47,1.907,48,1.907,49,1.587,50,1.317,51,1.659,52,1.317,53,1.035,54,0.052,55,1.907,56,1.659,57,1.317,58,0.493,59,1.317,60,1.317,61,1.853,62,1.317,63,1.035,64,0.655,65,1.317,66,0.655,67,1.659,68,2.241,69,1.317,70,1.659,71,1.498,72,1.317,73,1.907,74,2.241,75,1.659,76,1.76,77,1.317,78,1.587,79,1.192,80,1.317,81,1.659,82,1.659,83,0.639,84,1.317,85,1.035,86,1.659,87,0.814,88,0.814,89,0.814,90,1.929,91,1.317,92,0.814,93,1.317,94,1.317,95,1.659,96,0.814,97,1.317,98,0.814,99,0.509,100,1.317,101,0.814,102,0.814,103,1.317,104,0.814,105,2.456,106,0.814,107,1.659,108,2.134,109,1.317,110,1.907,111,0.814,112,1.317,113,1.035,114,1.659,115,0.814,116,0.814,117,0.814,118,0.814,119,0.814,120,0.814,121,0.814,122,1.317,123,0.814,124,0.814,125,0.639,126,0.814,127,1.317,128,0.814,129,1.659,130,0.814,131,1.303,132,1.035,133,0.814,134,0.814,135,0.814,136,0.814,137,1.317,138,0.814,139,0.814,140,1.645,141,1.317,142,1.907,143,0.814,144,0.814,145,0.814,146,0.814,147,0.814,148,0.814,149,0.814,150,0.814,151,0.814,152,0.814,153,0.814,154,0.814,155,0.814,156,0.814,157,1.317,158,0.814,159,0.814,160,0.814,161,0.814,162,0.814,163,0.814,164,0.814,165,0.814,166,0.814,167,0.814,168,0.814,169,0.036,174,0.639,188,0.639,191,2.2,192,1.746,193,1.079,194,2.717,195,1.079,196,0.814,197,1.079,198,1.907,199,1.079,200,1.079,201,1.079,202,1.079,203,1.303,204,1.079,205,1.079,206,1.079,207,1.079,208,1.317,209,1.079,210,1.079,211,1.079,212,1.079]],["title/components/TextInputAutocompleteMenuComponent.html",[32,0.654,58,0.368]],["body/components/TextInputAutocompleteMenuComponent.html",[2,0.536,3,0.422,4,0.323,5,1.468,6,1.166,8,1.245,9,1.643,10,1.642,12,2.126,13,0.091,14,1.643,15,0.642,18,0.492,19,1.749,21,1.564,26,0.323,32,0.87,33,0.422,34,1.166,36,1.245,37,0.847,38,0.422,40,1.564,42,0.99,43,0.674,44,0.422,45,0.422,49,1.498,54,0.045,58,0.527,61,0.847,66,0.817,71,1.291,78,1.245,79,1.028,83,1.749,90,1.291,108,1.882,113,1.291,125,1.749,131,0.847,132,0.847,140,1.291,169,0.045,170,0.674,171,1.078,172,1.078,174,0.847,175,0.847,177,1.643,179,2.226,181,1.643,182,1.643,183,1.078,184,1.643,185,1.291,186,2.226,187,1.078,188,1.749,189,1.078,190,1.078,194,2.916,196,1.078,198,1.643,203,1.983,208,1.991,213,1.43,214,2.178,215,1.643,216,1.643,217,2.178,218,2.178,219,2.178,220,1.643,221,2.639,222,2.639,223,2.639,224,2.639,225,2.951,226,2.951,227,2.951,228,2.951,229,2.951,230,2.178,231,2.178,232,2.178,233,1.43,234,2.525,235,1.43,236,1.43,237,1.43,238,1.43,239,1.43,240,1.43,241,1.43,242,1.43,243,1.43,244,2.178,245,1.43,246,1.43,247,1.43,248,1.43,249,1.43,250,1.43,251,1.43,252,1.43,253,1.43,254,1.43,255,1.43,256,1.43,257,1.43,258,1.43,259,2.178,260,1.43,261,2.525,262,1.43,263,2.178,264,1.43,265,1.43,266,1.43,267,2.639,268,2.639,269,2.178,270,2.178,271,1.43,272,1.43,273,1.43,274,1.43,275,1.43,276,1.43,277,1.43,278,1.43,279,1.43,280,1.43,281,1.43,282,1.43,283,1.43,284,1.43,285,1.43,286,1.43,287,1.43]],["title/modules/TextInputAutocompleteModule.html",[288,0.654,289,1.047]],["body/modules/TextInputAutocompleteModule.html",[2,1.032,3,0.811,4,0.622,5,1.032,6,1.157,13,0.09,15,1.215,26,0.622,32,1.232,33,1.105,34,1.013,35,1.63,38,1.105,44,0.811,45,1.191,54,0.07,169,0.07,170,1.905,288,0.811,289,1.62,290,2.75,291,3.435,292,3.435,293,2.591,294,3.435,295,2.75,296,2.75,297,2.75]],["title/changelog.html",[39,0.552,298,1.11,299,1.873]],["body/changelog.html",[4,0.603,13,0.069,46,1.581,49,1.59,54,0.069,64,1.265,99,1.259,169,0.069,215,2.013,216,2.013,300,3.695,301,2.669,302,2.669,303,2.669,304,1.581,305,2.669,306,2.669,307,2.013,308,2.669,309,2.669,310,2.669,311,3.882,312,2.669,313,2.669,314,3.695,315,3.695,316,2.669,317,2.669,318,2.669,319,2.013,320,2.669,321,2.669,322,2.669,323,2.928,324,2.669,325,3.695,326,2.669,327,3.371,328,2.669,329,2.669,330,2.669,331,2.669,332,2.787,333,2.669,334,2.669,335,2.669,336,2.669,337,2.669,338,2.543,339,2.669,340,3.371,341,2.013,342,1.259,343,2.669,344,2.669,345,2.669,346,3.371,347,2.669,348,2.669,349,2.669,350,2.669,351,2.013,352,2.669,353,2.669,354,2.669]],["title/dependencies.html",[338,1.413,342,1.254]],["body/dependencies.html",[13,0.086,26,0.753,28,1.571,29,1.973,54,0.079,169,0.079,341,2.512,342,1.818,355,3.33,356,3.33]],["title/index.html",[8,0.884,39,0.552,298,1.11]],["body/index.html",[3,0.809,6,1.133,10,0.924,13,0.089,15,1.065,18,0.443,26,0.62,28,0.924,33,1.133,34,1.011,38,0.933,39,0.809,42,0.735,44,0.809,54,0.056,58,0.569,63,1.161,64,1.029,66,0.735,76,1.161,78,1.294,79,1.294,85,1.626,99,1.493,169,0.056,175,1.161,185,1.161,220,2.069,234,2.388,288,0.933,289,1.294,293,2.069,304,1.876,307,1.478,319,2.069,323,1.478,332,2.724,342,0.924,357,3.166,358,2.743,359,1.959,360,1.959,361,3.92,362,3.43,363,1.161,364,1.959,365,1.959,366,1.959,367,1.959,368,3.984,369,2.743,370,1.959,371,1.959,372,1.959,373,1.959,374,3.43,375,1.959,376,1.478,377,3.166,378,2.743,379,1.959,380,1.959,381,1.959,382,1.959,383,1.959,384,1.959,385,1.959,386,1.959,387,1.959,388,1.959,389,1.959,390,1.959,391,1.959,392,1.478,393,1.959,394,1.959,395,1.959,396,1.959,397,1.959,398,1.959,399,1.959,400,1.959,401,1.959,402,1.959,403,2.743,404,1.959,405,1.959,406,1.959,407,1.959,408,1.959,409,1.959,410,1.959,411,1.959,412,1.959,413,2.743,414,3.742,415,1.959,416,1.959,417,1.959,418,3.611,419,1.959,420,1.959,421,1.959,422,1.959,423,1.959,424,1.959,425,1.959,426,1.959,427,1.959,428,1.959,429,1.478]],["title/license.html",[39,0.552,298,1.11,363,1.11]],["body/license.html",[4,0.587,13,0.068,36,1.226,53,1.54,54,0.068,64,1.244,169,0.068,203,1.54,304,1.54,351,1.961,363,1.54,376,2.753,392,2.753,429,2.501,430,3.65,431,2.599,432,2.599,433,2.599,434,3.315,435,2.599,436,2.599,437,2.599,438,2.599,439,3.315,440,2.599,441,3.844,442,4.219,443,2.599,444,3.315,445,2.599,446,3.315,447,2.599,448,2.599,449,2.599,450,2.599,451,2.599,452,2.599,453,2.599,454,2.599,455,2.599,456,2.599,457,2.599,458,2.599,459,2.599,460,3.315,461,3.315,462,2.599,463,2.599,464,2.599,465,3.315,466,2.599,467,2.599,468,2.599,469,2.599,470,2.599,471,2.599,472,2.599,473,2.599,474,2.599,475,2.599,476,2.599,477,2.599,478,2.599,479,2.599,480,2.599,481,2.599,482,2.599,483,2.599,484,2.599,485,2.599,486,2.599]],["title/modules.html",[288,0.881]],["body/modules.html",[13,0.08,54,0.08,169,0.08,288,1.006,289,1.609,487,3.41]],["title/overview.html",[488,2.254]],["body/overview.html",[0,1.576,13,0.079,18,0.755,54,0.079,58,0.554,169,0.079,261,3.073,288,0.985,488,2.521,489,3.342]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":125,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["0.1.0",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":261,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"overview.html":{}}}],["1.0",{"_index":425,"title":{},"body":{"index.html":{}}}],["10",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["11a32ad",{"_index":330,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":489,"title":{},"body":{"overview.html":{}}}],["200px",{"_index":217,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["2017",{"_index":351,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["4e02a45",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":323,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["8000",{"_index":416,"title":{},"body":{"index.html":{}}}],["8d8af83",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["_choic",{"_index":256,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["abov",{"_index":459,"title":{},"body":{"license.html":{}}}],["accept",{"_index":77,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["accessor",{"_index":249,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["action",{"_index":480,"title":{},"body":{"license.html":{}}}],["activ",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["activechoic",{"_index":225,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["actual_compon",{"_index":190,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ad",{"_index":364,"title":{},"body":{"index.html":{}}}],["add",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":453,"title":{},"body":{"license.html":{}}}],["angular",{"_index":332,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":295,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["angular/cor",{"_index":26,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartextinputautocomplet",{"_index":395,"title":{},"body":{"index.html":{}}}],["app",{"_index":377,"title":{},"body":{"index.html":{}}}],["appear",{"_index":50,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["argument",{"_index":208,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["aris",{"_index":484,"title":{},"body":{"license.html":{}}}],["around",{"_index":365,"title":{},"body":{"index.html":{}}}],["array",{"_index":80,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["arrow",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":443,"title":{},"body":{"license.html":{}}}],["author",{"_index":473,"title":{},"body":{"license.html":{}}}],["auto",{"_index":220,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["autocomplet",{"_index":34,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["autocomplete.direct",{"_index":296,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete.directive.t",{"_index":7,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:142",{"_index":207,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:35",{"_index":202,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:40",{"_index":201,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:46",{"_index":200,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:51",{"_index":206,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:56",{"_index":205,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:61",{"_index":204,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:66",{"_index":197,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:71",{"_index":199,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:82",{"_index":195,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:92",{"_index":212,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:99",{"_index":210,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.module.t",{"_index":290,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete/doc",{"_index":401,"title":{},"body":{"index.html":{}}}],["autocompletefor",{"_index":370,"title":{},"body":{"index.html":{}}}],["automat",{"_index":427,"title":{},"body":{"index.html":{}}}],["avail",{"_index":60,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["becom",{"_index":426,"title":{},"body":{"index.html":{}}}],["block",{"_index":182,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["blur",{"_index":191,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["break",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":487,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":372,"title":{},"body":{"index.html":{}}}],["bug",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["built",{"_index":63,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["bump",{"_index":422,"title":{},"body":{"index.html":{}}}],["bundler",{"_index":393,"title":{},"body":{"index.html":{}}}],["c",{"_index":431,"title":{},"body":{"license.html":{}}}],["call",{"_index":68,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["caret",{"_index":29,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{}}}],["caretposit",{"_index":145,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["catch(err",{"_index":115,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["chang",{"_index":300,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":299,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":47,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["charg",{"_index":438,"title":{},"body":{"license.html":{}}}],["choic",{"_index":10,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["choiceload",{"_index":227,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceloaderror",{"_index":226,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices(choic",{"_index":258,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.indexof(this.activechoic",{"_index":260,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.length",{"_index":262,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices[0",{"_index":264,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceselect",{"_index":75,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["choiceselectedev",{"_index":1,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["claim",{"_index":476,"title":{},"body":{"license.html":{}}}],["class",{"_index":44,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["class=\"dropdown",{"_index":222,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["close",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["commonmodul",{"_index":294,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["compil",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":399,"title":{},"body":{"index.html":{}}}],["compon",{"_index":58,"title":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":187,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["componentfactoryresolv",{"_index":16,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["componentref",{"_index":17,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["compos",{"_index":366,"title":{},"body":{"index.html":{}}}],["condit",{"_index":458,"title":{},"body":{"license.html":{}}}],["connect",{"_index":486,"title":{},"body":{"license.html":{}}}],["const",{"_index":108,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["constructor(componentfactoryresolv",{"_index":193,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["contain",{"_index":176,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["container'},{'nam",{"_index":189,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["container.compon",{"_index":297,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["container.component.t",{"_index":173,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["content",{"_index":360,"title":{},"body":{"index.html":{}}}],["continu",{"_index":420,"title":{},"body":{"index.html":{}}}],["contract",{"_index":481,"title":{},"body":{"license.html":{}}}],["control",{"_index":153,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["copi",{"_index":441,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":430,"title":{},"body":{"license.html":{}}}],["current",{"_index":410,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":109,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["custom",{"_index":65,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["d2b7cd1",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":477,"title":{},"body":{"license.html":{}}}],["de22714",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":444,"title":{},"body":{"license.html":{}}}],["declar",{"_index":291,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["decor",{"_index":243,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["default",{"_index":198,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["defin",{"_index":194,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["demo",{"_index":357,"title":{},"body":{"index.html":{}}}],["democompon",{"_index":382,"title":{},"body":{"index.html":{}}}],["depend",{"_index":342,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dev",{"_index":409,"title":{},"body":{"index.html":{}}}],["develop",{"_index":362,"title":{},"body":{"index.html":{}}}],["direct",{"_index":18,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{},"overview.html":{}}}],["directori",{"_index":411,"title":{},"body":{"index.html":{}}}],["display",{"_index":181,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["distribut",{"_index":451,"title":{},"body":{"license.html":{}}}],["document",{"_index":304,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["document:keydown.arrowdown",{"_index":230,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowdown(ev",{"_index":233,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup",{"_index":231,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup(ev",{"_index":236,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.ent",{"_index":232,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.enter(ev",{"_index":238,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dom",{"_index":171,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdown",{"_index":214,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdownmenu",{"_index":221,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdownmenuel",{"_index":228,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["element",{"_index":185,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["elementref",{"_index":19,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["elm",{"_index":95,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["end",{"_index":41,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["entrycompon",{"_index":292,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["environ",{"_index":406,"title":{},"body":{"index.html":{}}}],["err",{"_index":117,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event",{"_index":203,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["event('input",{"_index":156,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.key",{"_index":97,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.preventdefault",{"_index":267,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["event.target.valu",{"_index":103,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["eventemitt",{"_index":20,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["everyth",{"_index":394,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["express",{"_index":53,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["extend",{"_index":62,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["f8cf905",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":113,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["featur",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"license.html":{}}}],["final",{"_index":380,"title":{},"body":{"index.html":{}}}],["find",{"_index":390,"title":{},"body":{"index.html":{}}}],["findchoic",{"_index":82,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["findchoices(searchtext",{"_index":384,"title":{},"body":{"index.html":{}}}],["fit",{"_index":469,"title":{},"body":{"license.html":{}}}],["fix",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":457,"title":{},"body":{"license.html":{}}}],["forc",{"_index":149,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["form",{"_index":152,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["format",{"_index":84,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["formcontrolvalu",{"_index":383,"title":{},"body":{"index.html":{}}}],["free",{"_index":437,"title":{},"body":{"license.html":{}}}],["fulltemplatetypecheck",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":76,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["furnish",{"_index":456,"title":{},"body":{"license.html":{}}}],["gener",{"_index":397,"title":{},"body":{"index.html":{}}}],["get",{"_index":298,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getcaretcoordin",{"_index":27,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoic",{"_index":250,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["getchoicelabel",{"_index":86,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoicelabel(choic",{"_index":389,"title":{},"body":{"index.html":{}}}],["getcomputedstyl",{"_index":128,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["grant",{"_index":436,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":216,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["here",{"_index":400,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":435,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":72,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hidemenu",{"_index":164,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["higher",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":403,"title":{},"body":{"index.html":{}}}],["hit",{"_index":424,"title":{},"body":{"index.html":{}}}],["holder",{"_index":474,"title":{},"body":{"license.html":{}}}],["host",{"_index":178,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["hostlisten",{"_index":21,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('blur",{"_index":118,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":265,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":271,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.ent",{"_index":273,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('input",{"_index":102,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('keypress",{"_index":96,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["html",{"_index":184,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["htmltextareael",{"_index":139,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["https://mattlewis92.github.io/angular",{"_index":358,"title":{},"body":{"index.html":{}}}],["implement",{"_index":46,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["impli",{"_index":467,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["includ",{"_index":376,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["initi",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":22,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["input",{"_index":6,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["input(valu",{"_index":209,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["insertedat",{"_index":11,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["instal",{"_index":361,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"overview.html":{}}}],["item",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["item.tolowercase().includes(searchtext.tolowercas",{"_index":388,"title":{},"body":{"index.html":{}}}],["jane",{"_index":386,"title":{},"body":{"index.html":{}}}],["john",{"_index":385,"title":{},"body":{"index.html":{}}}],["jonny'].filter(item",{"_index":387,"title":{},"body":{"index.html":{}}}],["key",{"_index":99,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["keyboardev",{"_index":234,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["keyboardeventkeypolyfil",{"_index":378,"title":{},"body":{"index.html":{}}}],["keypress",{"_index":192,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["keypress(key",{"_index":211,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["kind",{"_index":466,"title":{},"body":{"license.html":{}}}],["label",{"_index":137,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label).length",{"_index":158,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label.length",{"_index":162,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lastcaretposit",{"_index":92,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["left",{"_index":132,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["legend",{"_index":183,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["lewi",{"_index":433,"title":{},"body":{"license.html":{}}}],["li",{"_index":281,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.getboundingclientrect",{"_index":284,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.scrollintoview(fals",{"_index":287,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liabil",{"_index":478,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":475,"title":{},"body":{"license.html":{}}}],["licens",{"_index":363,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":446,"title":{},"body":{"license.html":{}}}],["lineheight",{"_index":127,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheight!.replace(/px",{"_index":130,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["liposit",{"_index":283,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liposition.top",{"_index":285,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liter",{"_index":14,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["local",{"_index":408,"title":{},"body":{"index.html":{}}}],["log",{"_index":301,"title":{},"body":{"changelog.html":{}}}],["match",{"_index":54,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matt",{"_index":432,"title":{},"body":{"license.html":{}}}],["max",{"_index":215,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["member",{"_index":88,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menu",{"_index":49,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["menu.compon",{"_index":35,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["menu.component.t",{"_index":213,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":245,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":246,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":248,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":240,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":247,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":241,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:40",{"_index":242,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":253,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":251,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":235,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:64",{"_index":237,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:73",{"_index":239,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menucompon",{"_index":67,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menufactori",{"_index":122,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menuhidden",{"_index":73,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menushown",{"_index":70,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["merchant",{"_index":468,"title":{},"body":{"license.html":{}}}],["merg",{"_index":449,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":174,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["mit",{"_index":429,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":151,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["modifi",{"_index":448,"title":{},"body":{"license.html":{}}}],["modul",{"_index":288,"title":{"modules/TextInputAutocompleteModule.html":{},"modules.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mwl",{"_index":175,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["mymodul",{"_index":379,"title":{},"body":{"index.html":{}}}],["name",{"_index":188,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["namespac",{"_index":396,"title":{},"body":{"index.html":{}}}],["need",{"_index":373,"title":{},"body":{"index.html":{}}}],["new",{"_index":71,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ng",{"_index":150,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ngmodul",{"_index":293,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":168,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["node.j",{"_index":407,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":472,"title":{},"body":{"license.html":{}}}],["notabl",{"_index":302,"title":{},"body":{"changelog.html":{}}}],["notic",{"_index":460,"title":{},"body":{"license.html":{}}}],["now",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":368,"title":{},"body":{"index.html":{}}}],["number",{"_index":40,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["obtain",{"_index":440,"title":{},"body":{"license.html":{}}}],["older",{"_index":371,"title":{},"body":{"index.html":{}}}],["on",{"_index":381,"title":{},"body":{"index.html":{}}}],["onarrowdown(ev",{"_index":266,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onarrowup(ev",{"_index":272,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onblur",{"_index":119,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onc",{"_index":85,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["onchange(valu",{"_index":104,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ondestroy",{"_index":23,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onenter(ev",{"_index":274,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onkeypress(key",{"_index":98,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["option",{"_index":61,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["order",{"_index":89,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["otherwis",{"_index":483,"title":{},"body":{"license.html":{}}}],["out",{"_index":485,"title":{},"body":{"license.html":{}}}],["output",{"_index":24,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["overflow",{"_index":218,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["overview",{"_index":488,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":338,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":423,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":196,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["part",{"_index":404,"title":{},"body":{"index.html":{}}}],["particular",{"_index":470,"title":{},"body":{"license.html":{}}}],["peer",{"_index":341,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["permiss",{"_index":434,"title":{},"body":{"license.html":{}}}],["permit",{"_index":455,"title":{},"body":{"license.html":{}}}],["person",{"_index":439,"title":{},"body":{"license.html":{}}}],["pipe(takeuntil(this.menuhidden",{"_index":135,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["polyfil",{"_index":374,"title":{},"body":{"index.html":{}}}],["polyfillthen",{"_index":375,"title":{},"body":{"index.html":{}}}],["port",{"_index":415,"title":{},"body":{"index.html":{}}}],["portion",{"_index":463,"title":{},"body":{"license.html":{}}}],["posit",{"_index":179,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["prepar",{"_index":405,"title":{},"body":{"index.html":{}}}],["privat",{"_index":90,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["project",{"_index":303,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":81,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["provid",{"_index":464,"title":{},"body":{"license.html":{}}}],["publish",{"_index":450,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":471,"title":{},"body":{"license.html":{}}}],["regular",{"_index":52,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["rel",{"_index":180,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["relat",{"_index":402,"title":{},"body":{"index.html":{}}}],["releas",{"_index":421,"title":{},"body":{"index.html":{}}}],["releaselicens",{"_index":428,"title":{},"body":{"index.html":{}}}],["reload",{"_index":417,"title":{},"body":{"index.html":{}}}],["repo",{"_index":412,"title":{},"body":{"index.html":{}}}],["requir",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":445,"title":{},"body":{"license.html":{}}}],["result",{"_index":169,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":79,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["right",{"_index":447,"title":{},"body":{"license.html":{}}}],["run",{"_index":414,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["rxjs/oper",{"_index":31,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["save",{"_index":369,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["scrollbar",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["scrolltochoice(index",{"_index":276,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["search",{"_index":55,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchregexp",{"_index":56,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchtext",{"_index":83,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["see",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":74,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["selectchoic",{"_index":229,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["selector",{"_index":42,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["sell",{"_index":454,"title":{},"body":{"license.html":{}}}],["server",{"_index":413,"title":{},"body":{"index.html":{}}}],["set",{"_index":257,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setchoices(choic",{"_index":252,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setcursorat",{"_index":157,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shall",{"_index":461,"title":{},"body":{"license.html":{}}}],["show",{"_index":59,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["showmenu",{"_index":121,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shown",{"_index":69,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["softwar",{"_index":442,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["src/text",{"_index":5,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["standard",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":39,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["startindex",{"_index":142,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["string",{"_index":78,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["style",{"_index":177,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.left.px]=\"position?.left",{"_index":224,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.top.px]=\"position?.top",{"_index":223,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["subject",{"_index":36,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["sublicens",{"_index":452,"title":{},"body":{"license.html":{}}}],["subscribe(choic",{"_index":136,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["substanti",{"_index":462,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":359,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":30,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["templat",{"_index":66,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["test",{"_index":418,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":419,"title":{},"body":{"index.html":{}}}],["text",{"_index":33,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["textarea",{"_index":28,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{},"index.html":{}}}],["textarea.dispatchevent(new",{"_index":155,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.focu",{"_index":160,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.selectionstart",{"_index":147,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.setselectionrange(setcursorat",{"_index":159,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.valu",{"_index":141,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea[mwltextinputautocomplete],input[type=\"text\"][mwltextinputautocomplet",{"_index":43,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["textinputautocompletecontainercompon",{"_index":170,"title":{"components/TextInputAutocompleteContainerComponent.html":{}},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletedirect",{"_index":45,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemenucompon",{"_index":32,"title":{"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemodul",{"_index":289,"title":{"modules/TextInputAutocompleteModule.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{}}}],["this._choic",{"_index":259,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this._choices[index",{"_index":277,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.activechoic",{"_index":263,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices.indexof(this.activechoic",{"_index":268,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices[index",{"_index":269,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choiceselected.emit",{"_index":161,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.menucompon",{"_index":123,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.dropdownmenuel",{"_index":278,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.children[index",{"_index":282,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.getboundingclientrect",{"_index":280,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.elm.nativeel",{"_index":129,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.elm.nativeelement.selectionstart",{"_index":110,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.getchoicelabel(choic",{"_index":138,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.hidemenu",{"_index":107,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.injector",{"_index":126,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu",{"_index":105,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.lastcaretposit",{"_index":146,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.triggercharacterposit",{"_index":143,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.changedetectorref.detectchang",{"_index":114,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.destroy",{"_index":165,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choic",{"_index":111,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceload",{"_index":112,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceloaderror",{"_index":116,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.posit",{"_index":133,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.selectchoic",{"_index":134,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.lastcaretposit",{"_index":120,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden$.next",{"_index":166,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden.emit",{"_index":167,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menushown.emit",{"_index":163,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.scrolltochoice(index",{"_index":270,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.selectchoice.next(this.activechoic",{"_index":275,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.showmenu",{"_index":101,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.triggercharact",{"_index":100,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.viewcontainerref.createcompon",{"_index":124,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["through",{"_index":367,"title":{},"body":{"index.html":{}}}],["top",{"_index":131,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["tort",{"_index":482,"title":{},"body":{"license.html":{}}}],["tree",{"_index":172,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["trigger",{"_index":48,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharact",{"_index":51,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharacterposit",{"_index":91,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["tslint:dis",{"_index":87,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposit",{"_index":279,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposition.bottom",{"_index":286,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["undefin",{"_index":93,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["updat",{"_index":154,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["upgrad",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":64,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":391,"title":{},"body":{"index.html":{}}}],["valu",{"_index":140,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["value.slice(0",{"_index":144,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value.slice(caretposit",{"_index":148,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value[this.menu.triggercharacterposit",{"_index":106,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["var",{"_index":186,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["version",{"_index":307,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":398,"title":{},"body":{"index.html":{}}}],["view",{"_index":319,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["viewchild",{"_index":244,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewchild('dropdownmenu",{"_index":255,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewcontainerref",{"_index":25,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["void",{"_index":254,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["w",{"_index":57,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["warranti",{"_index":465,"title":{},"body":{"license.html":{}}}],["whether",{"_index":479,"title":{},"body":{"license.html":{}}}],["without",{"_index":392,"title":{},"body":{"index.html":{},"license.html":{}}}],["y",{"_index":219,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ChoiceSelectedEvent.html":{"url":"interfaces/ChoiceSelectedEvent.html","title":"interface - ChoiceSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChoiceSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choice\n                                \n                                \n                                        insertedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choice\n                                    \n                                \n                                \n                                    \n                                        choice:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insertedAt\n                                    \n                                \n                                \n                                    \n                                        insertedAt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n      const lineHeight = +getComputedStyle(\n        this.elm.nativeElement\n      ).lineHeight!.replace(/px$/, '');\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteContainerComponent.html":{"url":"components/TextInputAutocompleteContainerComponent.html","title":"component - TextInputAutocompleteContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-container\n            \n\n\n            \n                styles\n                \n    :host {\n      position: relative;\n      display: block;\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-container',\n  styles: [\n    `\n    :host {\n      position: relative;\n      display: block;\n    }\n  `\n  ],\n  template: ''\n})\nexport class TextInputAutocompleteContainerComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TextInputAutocompleteDirective.html":{"url":"directives/TextInputAutocompleteDirective.html","title":"directive - TextInputAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TextInputAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                findChoices\n                            \n                            \n                                getChoiceLabel\n                            \n                            \n                                menuComponent\n                            \n                            \n                                searchRegexp\n                            \n                            \n                                triggerCharacter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choiceSelected\n                            \n                            \n                                menuHidden\n                            \n                            \n                                menuShown\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                            \n                                keypress\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, injector: Injector, elm: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/text-input-autocomplete.directive.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        findChoices\n                    \n                    \n                        A function that accepts a search string and returns an array of choices. Can also return a promise.\n\n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        getChoiceLabel\n                    \n                    \n                        A function that formats the selected choice once selected.\n\n                            \n                            Type:    function\n\n                            \n                        \n                            Default value: choice => choice\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuComponent\n                    \n                    \n                        The menu component to show with available options.\nYou can extend the built in TextInputAutocompleteMenuComponent component to use a custom template\n\n                        \n                            Default value: TextInputAutocompleteMenuComponent\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchRegexp\n                    \n                    \n                        The regular expression that will match the search text after the trigger character\n\n                        \n                            Default value: /^\\w*$/\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerCharacter\n                    \n                    \n                        The character that will trigger the menu to appear\n\n                        \n                            Default value: '@'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:35\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        choiceSelected\n                    \n                    \n                        Called when a choice is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuHidden\n                    \n                    \n                        Called when the options menu is hidden\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuShown\n                    \n                    \n                        Called when the options menu is shown\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:51\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:142\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target.value' \n                        \n                    \n                \n                    \ninput(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keypress\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.key' \n                        \n                    \n                \n                    \nkeypress(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n      const lineHeight = +getComputedStyle(\n        this.elm.nativeElement\n      ).lineHeight!.replace(/px$/, '');\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteMenuComponent.html":{"url":"components/TextInputAutocompleteMenuComponent.html","title":"component - TextInputAutocompleteMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styles\n                \n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    \n            \n\n            \n                template\n                 0\"\n  #dropdownMenu\n  class=\"dropdown-menu\"\n  [style.top.px]=\"position?.top\"\n  [style.left.px]=\"position?.left\">\n  \n    \n      {{ choice }}\n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChoice\n                            \n                            \n                                choiceLoadError\n                            \n                            \n                                choiceLoading\n                            \n                            \n                                dropdownMenuElement\n                            \n                            \n                                position\n                            \n                            \n                                searchText\n                            \n                            \n                                selectChoice\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.ArrowDown\n                            \n                            \n                                document:keydown.ArrowUp\n                            \n                            \n                                document:keydown.Enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowDown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowDown(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowUp\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowUp(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.Enter\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.Enter(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeChoice:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoadError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoadError:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownMenuElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dropdownMenuElement:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectChoice:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        choices\n                    \n                \n\n                \n                    \n                        getchoices()\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:50\n                                \n                            \n\n                \n                    \n                        setchoices(choices: [])\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            choices\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  template: `\n     0\"\n      #dropdownMenu\n      class=\"dropdown-menu\"\n      [style.top.px]=\"position?.top\"\n      [style.left.px]=\"position?.left\">\n      \n        \n          {{ choice }}\n        \n      \n    \n  `,\n  styles: [\n    `\n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    `\n  ]\n})\nexport class TextInputAutocompleteMenuComponent {\n  @ViewChild('dropdownMenu') dropdownMenuElement: ElementRef;\n  position: { top: number; left: number };\n  selectChoice = new Subject();\n  activeChoice: any;\n  searchText: string;\n  choiceLoadError: any;\n  choiceLoading = false;\n  private _choices: any[];\n\n  set choices(choices: any[]) {\n    this._choices = choices;\n    if (choices.indexOf(this.activeChoice) === -1 && choices.length > 0) {\n      this.activeChoice = choices[0];\n    }\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index + 1]) {\n      this.scrollToChoice(index + 1);\n    }\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index - 1]) {\n      this.scrollToChoice(index - 1);\n    }\n  }\n\n  @HostListener('document:keydown.Enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    if (this.choices.indexOf(this.activeChoice) > -1) {\n      event.preventDefault();\n      this.selectChoice.next(this.activeChoice);\n    }\n  }\n\n  private scrollToChoice(index: number) {\n    this.activeChoice = this._choices[index];\n    if (this.dropdownMenuElement) {\n      const ulPosition = this.dropdownMenuElement.nativeElement.getBoundingClientRect();\n      const li = this.dropdownMenuElement.nativeElement.children[index];\n      const liPosition = li.getBoundingClientRect();\n      if (liPosition.top  ulPosition.bottom) {\n        li.scrollIntoView(false);\n      }\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\"  #dropdownMenu  class=\"dropdown-menu\"  [style.top.px]=\"position?.top\"  [style.left.px]=\"position?.left\">            {{ choice }}      '\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextInputAutocompleteModule.html":{"url":"modules/TextInputAutocompleteModule.html","title":"module - TextInputAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TextInputAutocompleteModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/text-input-autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TextInputAutocompleteContainerComponent\n                            \n                            \n                                TextInputAutocompleteDirective\n                            \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TextInputAutocompleteContainerComponent\n                            \n                            \n                                    TextInputAutocompleteDirective\n                            \n                            \n                                    TextInputAutocompleteMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputAutocompleteDirective } from './text-input-autocomplete.directive';\nimport { TextInputAutocompleteContainerComponent } from './text-input-autocomplete-container.component';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\n\n@NgModule({\n  declarations: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  entryComponents: [TextInputAutocompleteMenuComponent]\n})\nexport class TextInputAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.2.1 (2018-06-16)\nBug Fixes\n\nmenu: scroll active item into view when using arrow keys (de22714), closes #6\n\n\n0.2.0 (2018-05-14)\nFeatures\n\nadd max height and scrollbar to menu (11a32ad)\nupgrade to angular 6 (8d8af83)\n\nBREAKING CHANGES\n\nangular 6 or higher is now required to use this package\n\n\n0.1.2 (2018-05-05)\nBug Fixes\n\nallow angular 6 peer dependency (4e02a45)\n\n\n0.1.1 (2018-01-10)\nBug Fixes\n\nallow the package to be compiled with fullTemplateTypecheck (d2b7cd1)\n\n\n0.1.0 (2017-10-09)\nFeatures\n\ninitial implementation (f8cf905)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            textarea-caret : ^3.1.0\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >=6.0.0 \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular text input autocomplete\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nA angular 6+ directive for adding autocomplete functionality to text input elements, built around composability\nInstallation\nInstall through npm:\nnpm install --save angular-text-input-autocompleteFor older browsers you will need the keyboardevent-key-polyfill polyfill:\nnpm install --save keyboardevent-key-polyfillThen include in your apps module:\nimport { polyfill as keyboardEventKeyPolyfill } from 'keyboardevent-key-polyfill';\nimport { NgModule } from '@angular/core';\nimport { TextInputAutocompleteModule } from 'angular-text-input-autocomplete';\n\nkeyboardEventKeyPolyfill();\n\n@NgModule({\n  imports: [TextInputAutocompleteModule]\n})\nexport class MyModule {}Finally use in one of your apps components:\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-demo-app',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class DemoComponent {\n  formControlValue = '';\n\n  findChoices(searchText: string) {\n    return ['John', 'Jane', 'Jonny'].filter(item =>\n      item.toLowerCase().includes(searchText.toLowerCase())\n    );\n  }\n\n  getChoiceLabel(choice: string) {\n    return `@${choice} `;\n  }\n}You may also find it useful to view the demo source.\nUsage without a module bundler\n\n\n    // everything is exported angularTextInputAutocomplete namespace\nDocumentation\nAll documentation is auto-generated from the source via compodoc and can be viewed here:\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/docs/\nRelated\nangular-text-input-highlight - a component for highlighting parts of a textarea\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\n\nBump the version in package.json (once the module hits 1.0 this will become automatic)\n\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TextInputAutocompleteModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
