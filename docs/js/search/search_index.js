var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ChoiceSelectedEvent.html",[0,1.047,1,1.315]],["body/interfaces/ChoiceSelectedEvent.html",[0,0.987,1,1.24,2,0.509,3,0.4,4,0.307,5,0.509,6,1.04,7,1.023,8,0.64,9,1.579,10,1.802,11,2.341,12,1.702,13,0.092,14,1.579,15,0.915,16,1.927,17,1.579,18,0.473,19,1.24,20,2.166,21,0.804,22,1.927,23,1.579,24,2.166,25,1.927,26,0.307,27,1.579,28,0.987,29,0.804,30,1.023,31,1.023,32,0.753,33,0.617,34,0.4,35,0.804,36,0.987,37,0.804,38,0.617,39,0.915,40,1.702,41,2.166,42,0.4,43,0.64,44,0.4,45,0.4,46,0.804,47,1.579,48,1.579,49,1.164,50,1.023,51,1.023,52,1.023,53,0.804,54,0.052,55,1.579,56,1.023,57,1.023,58,0.323,59,1.023,60,1.023,61,1.514,62,1.023,63,0.804,64,0.509,65,1.023,66,0.509,67,1.023,68,1.927,69,1.023,70,1.023,71,1.702,72,1.023,73,1.579,74,1.927,75,1.023,76,1.24,77,1.023,78,1.546,79,0.987,80,1.023,81,1.579,82,1.023,83,0.804,84,1.023,85,0.804,86,1.023,87,1.023,88,1.023,89,1.023,90,2.091,91,1.579,92,1.023,93,1.24,94,1.023,95,1.023,96,1.023,97,1.023,98,1.023,99,0.64,100,1.579,101,1.023,102,1.023,103,1.023,104,1.023,105,2.662,106,1.023,107,1.927,108,2.263,109,1.579,110,2.166,111,1.023,112,1.579,113,1.24,114,1.927,115,1.023,116,1.023,117,1.023,118,1.023,119,1.023,120,1.023,121,1.023,122,1.579,123,1.023,124,1.023,125,0.804,126,1.023,127,1.579,128,1.023,129,1.927,130,1.023,131,1.514,132,1.24,133,1.023,134,1.023,135,1.023,136,1.023,137,1.579,138,1.023,139,1.023,140,0.804,141,1.579,142,2.166,143,1.023,144,1.023,145,1.023,146,1.023,147,1.023,148,1.023,149,1.023,150,1.023,151,1.023,152,1.023,153,1.023,154,1.023,155,1.023,156,1.023,157,1.579,158,1.023,159,1.023,160,1.023,161,1.023,162,1.023,163,1.023,164,1.023,165,1.023,166,1.023,167,1.023,168,1.023,169,0.043]],["title/components/TextInputAutocompleteContainerComponent.html",[58,0.249,170,1.047]],["body/components/TextInputAutocompleteContainerComponent.html",[2,0.971,3,0.763,4,0.585,5,0.971,6,1.169,13,0.09,15,0.763,18,0.747,26,0.585,32,0.763,33,1.132,34,1.169,38,0.763,42,1.169,43,1.221,44,0.763,45,0.763,49,0.971,54,0.068,58,0.446,66,1.24,169,0.068,170,1.81,171,1.952,172,1.952,173,2.588,174,1.533,175,2.274,176,3.306,177,2.494,178,3.306,179,2.494,180,3.306,181,2.494,182,2.494,183,1.952,184,2.494,185,1.959,186,2.895,187,1.952,188,2.158,189,1.952,190,1.952]],["title/directives/TextInputAutocompleteDirective.html",[18,0.502,45,0.654]],["body/directives/TextInputAutocompleteDirective.html",[0,0.52,1,0.654,2,0.414,3,0.325,4,0.249,5,1.382,6,1.192,7,0.832,8,0.52,10,1.762,11,1.341,12,1.778,13,0.092,15,0.828,16,2.264,17,1.341,18,0.505,19,1.517,20,2.381,21,1.323,22,2.381,23,1.684,24,2.264,25,2.381,26,0.249,27,1.341,28,0.838,29,0.654,30,0.832,31,0.832,32,0.828,33,0.658,34,0.325,35,0.654,36,0.838,37,0.654,38,0.524,39,0.828,40,1.517,41,1.931,42,0.524,43,0.838,44,0.325,45,0.524,46,1.053,47,1.931,48,1.931,49,1.272,50,1.341,51,1.684,52,1.341,53,1.053,54,0.052,55,1.931,56,1.684,57,1.341,58,0.337,59,1.341,60,1.341,61,1.87,62,1.341,63,1.053,64,0.667,65,1.341,66,0.667,67,1.684,68,2.264,69,1.341,70,1.684,71,1.517,72,1.341,73,1.931,74,2.264,75,1.684,76,1.778,77,1.341,78,1.599,79,1.208,80,1.341,81,1.684,82,1.684,83,0.654,84,1.341,85,1.053,86,1.684,87,0.832,88,0.832,89,0.832,90,1.945,91,1.341,92,0.832,93,1.053,94,1.341,95,1.684,96,0.832,97,1.341,98,0.832,99,0.52,100,1.341,101,0.832,102,0.832,103,1.341,104,0.832,105,2.477,106,0.832,107,1.684,108,2.148,109,1.341,110,1.931,111,0.832,112,1.341,113,1.053,114,1.684,115,0.832,116,0.832,117,0.832,118,0.832,119,0.832,120,0.832,121,0.832,122,1.341,123,0.832,124,0.832,125,0.654,126,0.832,127,1.341,128,0.832,129,1.684,130,0.832,131,1.323,132,1.053,133,0.832,134,0.832,135,0.832,136,0.832,137,1.341,138,0.832,139,0.832,140,1.664,141,1.341,142,1.931,143,0.832,144,0.832,145,0.832,146,0.832,147,0.832,148,0.832,149,0.832,150,0.832,151,0.832,152,0.832,153,0.832,154,0.832,155,0.832,156,0.832,157,1.341,158,0.832,159,0.832,160,0.832,161,0.832,162,0.832,163,0.832,164,0.832,165,0.832,166,0.832,167,0.832,168,0.832,169,0.036,174,0.654,188,0.654,191,2.233,192,1.778,193,1.103,194,2.734,195,1.103,196,0.832,197,1.103,198,1.931,199,1.103,200,1.103,201,1.103,202,1.103,203,1.323,204,1.103,205,1.103,206,1.103,207,1.103,208,1.341,209,1.103,210,1.103,211,1.103,212,1.103]],["title/components/TextInputAutocompleteMenuComponent.html",[32,0.654,58,0.249]],["body/components/TextInputAutocompleteMenuComponent.html",[2,0.508,3,0.4,4,0.306,5,1.467,6,1.192,8,1.463,9,1.577,10,1.774,12,2.09,13,0.091,14,1.577,15,0.616,18,0.473,19,1.701,21,1.513,26,0.306,32,0.846,33,0.846,34,1.192,36,1.204,37,0.803,38,0.4,40,1.837,42,0.914,43,0.639,44,0.4,45,0.4,49,1.323,54,0.043,58,0.348,61,0.803,66,0.784,71,1.239,78,1.204,79,0.986,83,1.701,90,1.239,93,1.239,108,1.837,113,1.239,125,1.701,131,0.803,132,0.803,140,1.513,169,0.043,170,0.639,171,1.022,172,1.022,174,0.803,175,1.701,177,1.577,179,2.165,181,1.577,182,1.577,183,1.022,184,1.577,185,1.239,186,2.165,187,1.022,188,1.701,189,1.022,190,1.022,194,2.918,196,1.022,198,1.926,203,1.942,208,1.926,213,1.355,214,1.577,215,1.577,216,1.577,217,2.091,218,2.091,219,2.091,220,1.577,221,2.553,222,2.553,223,2.553,224,2.553,225,2.87,226,2.87,227,2.87,228,2.87,229,2.87,230,2.87,231,2.091,232,2.091,233,2.091,234,1.355,235,2.472,236,1.355,237,1.355,238,1.355,239,1.355,240,1.355,241,1.355,242,1.355,243,1.355,244,1.355,245,2.091,246,1.355,247,1.355,248,1.355,249,1.355,250,2.091,251,2.87,252,1.355,253,1.355,254,1.355,255,1.355,256,1.355,257,1.355,258,1.355,259,1.355,260,1.355,261,1.355,262,1.355,263,2.091,264,1.355,265,2.472,266,1.355,267,2.091,268,1.355,269,1.355,270,1.355,271,2.553,272,2.553,273,2.091,274,2.091,275,1.355,276,1.355,277,1.355,278,1.355,279,1.355,280,1.355,281,1.355,282,1.355,283,1.355,284,1.355,285,1.355,286,1.355,287,1.355,288,1.355,289,1.355,290,1.355,291,1.355]],["title/modules/TextInputAutocompleteModule.html",[292,0.654,293,1.047]],["body/modules/TextInputAutocompleteModule.html",[2,1.039,3,0.816,4,0.626,5,1.039,6,1.16,13,0.09,15,1.217,26,0.626,32,1.234,33,1.108,34,1.017,35,1.641,38,1.108,44,0.816,45,1.193,54,0.071,169,0.071,170,1.909,292,0.816,293,1.627,294,2.769,295,3.45,296,3.45,297,2.603,298,3.45,299,2.769,300,2.769,301,2.769]],["title/changelog.html",[39,0.552,302,1.11,303,1.873]],["body/changelog.html",[4,0.588,13,0.068,42,0.767,46,1.541,49,1.37,54,0.068,58,0.292,64,1.244,99,1.227,169,0.068,214,1.962,215,1.962,216,1.962,304,3.651,305,2.601,306,2.601,307,2.601,308,1.541,309,2.601,310,2.601,311,1.962,312,2.601,313,2.601,314,2.601,315,3.972,316,2.601,317,2.601,318,3.651,319,3.316,320,2.601,321,3.316,322,2.601,323,2.601,324,2.601,325,2.601,326,3.651,327,3.651,328,2.601,329,2.601,330,2.601,331,1.962,332,2.601,333,2.601,334,2.901,335,2.601,336,3.651,337,2.601,338,2.601,339,2.601,340,2.601,341,2.754,342,2.601,343,2.601,344,2.601,345,2.601,346,2.601,347,2.502,348,2.601,349,3.316,350,1.962,351,1.227,352,2.601,353,2.601,354,2.601,355,3.316,356,2.601,357,2.601,358,2.601,359,2.601,360,1.962,361,2.601,362,2.601,363,2.601]],["title/dependencies.html",[347,1.413,351,1.254]],["body/dependencies.html",[13,0.086,26,0.754,28,1.574,29,1.977,54,0.079,169,0.079,350,2.517,351,1.82,364,3.336,365,3.336]],["title/index.html",[8,0.884,39,0.552,302,1.11]],["body/index.html",[3,0.817,6,1.137,10,0.937,13,0.089,15,1.07,18,0.449,26,0.626,28,0.937,33,1.137,34,1.018,38,0.941,39,0.817,42,0.586,44,0.817,54,0.057,58,0.388,63,1.177,64,1.039,66,0.745,76,1.177,78,1.307,79,1.307,85,1.642,99,1.505,169,0.057,175,1.177,185,1.177,220,2.09,235,2.406,292,0.941,293,1.307,297,2.09,308,1.89,311,1.499,331,2.09,334,1.499,341,2.738,351,0.937,366,3.19,367,2.771,368,1.987,369,1.987,370,3.934,371,3.451,372,1.177,373,1.987,374,1.987,375,1.987,376,1.987,377,3.996,378,2.771,379,1.987,380,1.987,381,1.987,382,1.987,383,3.451,384,1.987,385,1.499,386,3.19,387,2.771,388,1.987,389,1.987,390,1.987,391,1.987,392,1.987,393,1.987,394,1.987,395,1.987,396,1.987,397,1.987,398,1.987,399,1.987,400,1.987,401,1.499,402,1.987,403,1.987,404,1.987,405,1.987,406,1.987,407,1.987,408,1.987,409,1.987,410,1.987,411,1.987,412,2.771,413,1.987,414,1.987,415,1.987,416,1.987,417,1.987,418,1.987,419,1.987,420,1.987,421,1.987,422,2.771,423,3.759,424,1.987,425,1.987,426,1.987,427,3.629,428,1.987,429,1.987,430,1.987,431,1.987,432,1.987,433,1.987,434,1.987,435,1.987,436,1.987,437,1.987,438,1.499]],["title/license.html",[39,0.552,302,1.11,372,1.11]],["body/license.html",[4,0.592,13,0.068,36,1.236,53,1.553,54,0.068,64,1.25,169,0.068,203,1.553,308,1.553,360,1.977,372,1.553,385,2.764,401,2.764,438,2.514,439,3.664,440,2.621,441,2.621,442,2.621,443,3.333,444,2.621,445,2.621,446,2.621,447,2.621,448,3.333,449,2.621,450,3.856,451,4.225,452,2.621,453,3.333,454,2.621,455,3.333,456,2.621,457,2.621,458,2.621,459,2.621,460,2.621,461,2.621,462,2.621,463,2.621,464,2.621,465,2.621,466,2.621,467,2.621,468,2.621,469,3.333,470,3.333,471,2.621,472,2.621,473,2.621,474,3.333,475,2.621,476,2.621,477,2.621,478,2.621,479,2.621,480,2.621,481,2.621,482,2.621,483,2.621,484,2.621,485,2.621,486,2.621,487,2.621,488,2.621,489,2.621,490,2.621,491,2.621,492,2.621,493,2.621,494,2.621,495,2.621]],["title/modules.html",[292,0.881]],["body/modules.html",[13,0.08,54,0.08,169,0.08,292,1.007,293,1.61,496,3.414]],["title/overview.html",[497,2.254]],["body/overview.html",[0,1.579,13,0.079,18,0.756,54,0.079,58,0.376,169,0.079,265,3.075,292,0.987,497,2.525,498,3.347]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":125,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["0.1.0",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":265,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"overview.html":{}}}],["1.0",{"_index":434,"title":{},"body":{"index.html":{}}}],["10",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["11a32ad",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":498,"title":{},"body":{"overview.html":{}}}],["200px",{"_index":217,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["2017",{"_index":360,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["4e02a45",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":334,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["8000",{"_index":425,"title":{},"body":{"index.html":{}}}],["8d8af83",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["_choic",{"_index":260,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["abov",{"_index":468,"title":{},"body":{"license.html":{}}}],["accept",{"_index":77,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["accessor",{"_index":253,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["action",{"_index":489,"title":{},"body":{"license.html":{}}}],["activ",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["activechoic",{"_index":225,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["actual_compon",{"_index":190,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ad",{"_index":373,"title":{},"body":{"index.html":{}}}],["add",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":462,"title":{},"body":{"license.html":{}}}],["angular",{"_index":341,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":299,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["angular/cor",{"_index":26,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartextinputautocomplet",{"_index":404,"title":{},"body":{"index.html":{}}}],["app",{"_index":386,"title":{},"body":{"index.html":{}}}],["appear",{"_index":50,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["argument",{"_index":208,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["aris",{"_index":493,"title":{},"body":{"license.html":{}}}],["around",{"_index":374,"title":{},"body":{"index.html":{}}}],["array",{"_index":80,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["arrow",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":452,"title":{},"body":{"license.html":{}}}],["author",{"_index":482,"title":{},"body":{"license.html":{}}}],["auto",{"_index":220,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["autocomplet",{"_index":34,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["autocomplete.direct",{"_index":300,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete.directive.t",{"_index":7,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:142",{"_index":207,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:35",{"_index":202,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:40",{"_index":201,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:46",{"_index":200,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:51",{"_index":206,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:56",{"_index":205,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:61",{"_index":204,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:66",{"_index":197,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:71",{"_index":199,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:82",{"_index":195,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:92",{"_index":212,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:99",{"_index":210,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.module.t",{"_index":294,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete/doc",{"_index":410,"title":{},"body":{"index.html":{}}}],["autocompletefor",{"_index":379,"title":{},"body":{"index.html":{}}}],["automat",{"_index":436,"title":{},"body":{"index.html":{}}}],["avail",{"_index":60,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["becom",{"_index":435,"title":{},"body":{"index.html":{}}}],["block",{"_index":182,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["blur",{"_index":191,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["break",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":496,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"index.html":{}}}],["bug",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["built",{"_index":63,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["bump",{"_index":431,"title":{},"body":{"index.html":{}}}],["bundler",{"_index":402,"title":{},"body":{"index.html":{}}}],["c",{"_index":440,"title":{},"body":{"license.html":{}}}],["c9ff811",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":68,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["caret",{"_index":29,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{}}}],["caretposit",{"_index":145,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["catch(err",{"_index":115,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["chang",{"_index":304,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":303,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":47,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["charg",{"_index":447,"title":{},"body":{"license.html":{}}}],["choic",{"_index":10,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["choice.id",{"_index":251,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceload",{"_index":227,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceloaderror",{"_index":226,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices(choic",{"_index":262,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.indexof(this.activechoic",{"_index":264,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.length",{"_index":266,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices[0",{"_index":268,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceselect",{"_index":75,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["choiceselectedev",{"_index":1,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["claim",{"_index":485,"title":{},"body":{"license.html":{}}}],["class",{"_index":44,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["class=\"dropdown",{"_index":222,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["close",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["commonmodul",{"_index":298,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["compil",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":408,"title":{},"body":{"index.html":{}}}],["compon",{"_index":58,"title":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":187,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["componentfactoryresolv",{"_index":16,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["componentref",{"_index":17,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["compos",{"_index":375,"title":{},"body":{"index.html":{}}}],["condit",{"_index":467,"title":{},"body":{"license.html":{}}}],["connect",{"_index":495,"title":{},"body":{"license.html":{}}}],["const",{"_index":108,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["constructor(componentfactoryresolv",{"_index":193,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["contain",{"_index":176,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["container'},{'nam",{"_index":189,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["container.compon",{"_index":301,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["container.component.t",{"_index":173,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["content",{"_index":369,"title":{},"body":{"index.html":{}}}],["continu",{"_index":429,"title":{},"body":{"index.html":{}}}],["contract",{"_index":490,"title":{},"body":{"license.html":{}}}],["control",{"_index":153,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["copi",{"_index":450,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":439,"title":{},"body":{"license.html":{}}}],["current",{"_index":419,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":109,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["custom",{"_index":65,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["d2b7cd1",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":486,"title":{},"body":{"license.html":{}}}],["de22714",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":453,"title":{},"body":{"license.html":{}}}],["declar",{"_index":295,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["decor",{"_index":244,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["default",{"_index":198,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["defin",{"_index":194,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["demo",{"_index":366,"title":{},"body":{"index.html":{}}}],["democompon",{"_index":391,"title":{},"body":{"index.html":{}}}],["depend",{"_index":351,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dev",{"_index":418,"title":{},"body":{"index.html":{}}}],["develop",{"_index":371,"title":{},"body":{"index.html":{}}}],["direct",{"_index":18,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{},"overview.html":{}}}],["directori",{"_index":420,"title":{},"body":{"index.html":{}}}],["display",{"_index":181,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["distribut",{"_index":460,"title":{},"body":{"license.html":{}}}],["document",{"_index":308,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["document:keydown.arrowdown",{"_index":231,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowdown(ev",{"_index":234,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup",{"_index":232,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup(ev",{"_index":237,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.ent",{"_index":233,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.enter(ev",{"_index":239,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dom",{"_index":171,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdown",{"_index":214,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["dropdownmenu",{"_index":221,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdownmenuel",{"_index":228,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["element",{"_index":185,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["elementref",{"_index":19,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["elm",{"_index":95,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["end",{"_index":41,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["entrycompon",{"_index":296,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["environ",{"_index":415,"title":{},"body":{"index.html":{}}}],["err",{"_index":117,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event",{"_index":203,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["event('input",{"_index":156,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.key",{"_index":97,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.preventdefault",{"_index":271,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["event.target.valu",{"_index":103,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["eventemitt",{"_index":20,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["everyth",{"_index":403,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["express",{"_index":53,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["extend",{"_index":62,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["f8cf905",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":113,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["featur",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"license.html":{}}}],["final",{"_index":389,"title":{},"body":{"index.html":{}}}],["find",{"_index":399,"title":{},"body":{"index.html":{}}}],["findchoic",{"_index":82,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["findchoices(searchtext",{"_index":393,"title":{},"body":{"index.html":{}}}],["fit",{"_index":478,"title":{},"body":{"license.html":{}}}],["fix",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":466,"title":{},"body":{"license.html":{}}}],["forc",{"_index":149,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["form",{"_index":152,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["format",{"_index":84,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["formcontrolvalu",{"_index":392,"title":{},"body":{"index.html":{}}}],["free",{"_index":446,"title":{},"body":{"license.html":{}}}],["fulltemplatetypecheck",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":76,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["furnish",{"_index":465,"title":{},"body":{"license.html":{}}}],["gener",{"_index":406,"title":{},"body":{"index.html":{}}}],["get",{"_index":302,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getcaretcoordin",{"_index":27,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoic",{"_index":254,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["getchoicelabel",{"_index":86,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoicelabel(choic",{"_index":398,"title":{},"body":{"index.html":{}}}],["getcomputedstyl",{"_index":128,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["grant",{"_index":445,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":216,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["here",{"_index":409,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":444,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":72,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hidemenu",{"_index":164,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["higher",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":412,"title":{},"body":{"index.html":{}}}],["hit",{"_index":433,"title":{},"body":{"index.html":{}}}],["holder",{"_index":483,"title":{},"body":{"license.html":{}}}],["host",{"_index":178,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["hostlisten",{"_index":21,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('blur",{"_index":118,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":269,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":275,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.ent",{"_index":277,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('input",{"_index":102,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('keypress",{"_index":96,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["html",{"_index":184,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["htmltextareael",{"_index":139,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["https://mattlewis92.github.io/angular",{"_index":367,"title":{},"body":{"index.html":{}}}],["implement",{"_index":46,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["impli",{"_index":476,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["includ",{"_index":385,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["initi",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":22,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["input",{"_index":6,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["input(valu",{"_index":209,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["insertedat",{"_index":11,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["instal",{"_index":370,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"overview.html":{}}}],["item",{"_index":330,"title":{},"body":{"changelog.html":{}}}],["item.tolowercase().includes(searchtext.tolowercas",{"_index":397,"title":{},"body":{"index.html":{}}}],["jane",{"_index":395,"title":{},"body":{"index.html":{}}}],["john",{"_index":394,"title":{},"body":{"index.html":{}}}],["jonny'].filter(item",{"_index":396,"title":{},"body":{"index.html":{}}}],["key",{"_index":99,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["keyboardev",{"_index":235,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["keyboardeventkeypolyfil",{"_index":387,"title":{},"body":{"index.html":{}}}],["keypress",{"_index":192,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["keypress(key",{"_index":211,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["kind",{"_index":475,"title":{},"body":{"license.html":{}}}],["label",{"_index":137,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label).length",{"_index":158,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label.length",{"_index":162,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lastcaretposit",{"_index":92,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["left",{"_index":132,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["legend",{"_index":183,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["lewi",{"_index":442,"title":{},"body":{"license.html":{}}}],["li",{"_index":285,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.getboundingclientrect",{"_index":288,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.scrollintoview(fals",{"_index":291,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liabil",{"_index":487,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":484,"title":{},"body":{"license.html":{}}}],["licens",{"_index":372,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":455,"title":{},"body":{"license.html":{}}}],["lineheight",{"_index":127,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheight!.replace(/px",{"_index":130,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["liposit",{"_index":287,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liposition.top",{"_index":289,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liter",{"_index":14,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["local",{"_index":417,"title":{},"body":{"index.html":{}}}],["log",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["match",{"_index":54,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matt",{"_index":441,"title":{},"body":{"license.html":{}}}],["max",{"_index":215,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["member",{"_index":88,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menu",{"_index":49,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["menu.compon",{"_index":35,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["menu.component.t",{"_index":213,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":246,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":247,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":249,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":241,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":248,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:40",{"_index":242,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":243,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":252,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:46",{"_index":257,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":255,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:58",{"_index":236,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:67",{"_index":238,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:76",{"_index":240,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menucompon",{"_index":67,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menufactori",{"_index":122,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menuhidden",{"_index":73,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menushown",{"_index":70,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["merchant",{"_index":477,"title":{},"body":{"license.html":{}}}],["merg",{"_index":458,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":174,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["mit",{"_index":438,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":151,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["modifi",{"_index":457,"title":{},"body":{"license.html":{}}}],["modul",{"_index":292,"title":{"modules/TextInputAutocompleteModule.html":{},"modules.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mwl",{"_index":175,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["mymodul",{"_index":388,"title":{},"body":{"index.html":{}}}],["name",{"_index":188,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["namespac",{"_index":405,"title":{},"body":{"index.html":{}}}],["need",{"_index":382,"title":{},"body":{"index.html":{}}}],["new",{"_index":71,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ng",{"_index":150,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ngmodul",{"_index":297,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":168,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["node.j",{"_index":416,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":481,"title":{},"body":{"license.html":{}}}],["notabl",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["notic",{"_index":469,"title":{},"body":{"license.html":{}}}],["now",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":377,"title":{},"body":{"index.html":{}}}],["number",{"_index":40,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["obtain",{"_index":449,"title":{},"body":{"license.html":{}}}],["older",{"_index":380,"title":{},"body":{"index.html":{}}}],["on",{"_index":390,"title":{},"body":{"index.html":{}}}],["onarrowdown(ev",{"_index":270,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onarrowup(ev",{"_index":276,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onblur",{"_index":119,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onc",{"_index":85,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["onchange(valu",{"_index":104,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ondestroy",{"_index":23,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onenter(ev",{"_index":278,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onkeypress(key",{"_index":98,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["option",{"_index":61,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["order",{"_index":89,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["otherwis",{"_index":492,"title":{},"body":{"license.html":{}}}],["out",{"_index":494,"title":{},"body":{"license.html":{}}}],["output",{"_index":24,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["overflow",{"_index":218,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["overview",{"_index":497,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":347,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":432,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":196,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["part",{"_index":413,"title":{},"body":{"index.html":{}}}],["particular",{"_index":479,"title":{},"body":{"license.html":{}}}],["peer",{"_index":350,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["permiss",{"_index":443,"title":{},"body":{"license.html":{}}}],["permit",{"_index":464,"title":{},"body":{"license.html":{}}}],["person",{"_index":448,"title":{},"body":{"license.html":{}}}],["pipe(takeuntil(this.menuhidden",{"_index":135,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["polyfil",{"_index":383,"title":{},"body":{"index.html":{}}}],["polyfillthen",{"_index":384,"title":{},"body":{"index.html":{}}}],["port",{"_index":424,"title":{},"body":{"index.html":{}}}],["portion",{"_index":472,"title":{},"body":{"license.html":{}}}],["posit",{"_index":179,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["prepar",{"_index":414,"title":{},"body":{"index.html":{}}}],["privat",{"_index":90,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["project",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":81,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["provid",{"_index":473,"title":{},"body":{"license.html":{}}}],["publish",{"_index":459,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":480,"title":{},"body":{"license.html":{}}}],["regular",{"_index":52,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["rel",{"_index":180,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["relat",{"_index":411,"title":{},"body":{"index.html":{}}}],["releas",{"_index":430,"title":{},"body":{"index.html":{}}}],["releaselicens",{"_index":437,"title":{},"body":{"index.html":{}}}],["reload",{"_index":426,"title":{},"body":{"index.html":{}}}],["repo",{"_index":421,"title":{},"body":{"index.html":{}}}],["requir",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":454,"title":{},"body":{"license.html":{}}}],["result",{"_index":169,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":79,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["right",{"_index":456,"title":{},"body":{"license.html":{}}}],["run",{"_index":423,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["rxjs/oper",{"_index":31,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["save",{"_index":378,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["scrollbar",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["scrolltochoice(index",{"_index":280,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["search",{"_index":55,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchregexp",{"_index":56,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchtext",{"_index":83,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["see",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":74,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["selectchoic",{"_index":229,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["selector",{"_index":42,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["sell",{"_index":463,"title":{},"body":{"license.html":{}}}],["server",{"_index":422,"title":{},"body":{"index.html":{}}}],["set",{"_index":261,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setchoices(choic",{"_index":256,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setcursorat",{"_index":157,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shall",{"_index":470,"title":{},"body":{"license.html":{}}}],["show",{"_index":59,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["showmenu",{"_index":121,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shown",{"_index":69,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["softwar",{"_index":451,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["src/text",{"_index":5,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["standard",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":39,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["startindex",{"_index":142,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["string",{"_index":78,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["style",{"_index":177,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.left.px]=\"position?.left",{"_index":224,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.top.px]=\"position?.top",{"_index":223,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["subject",{"_index":36,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["sublicens",{"_index":461,"title":{},"body":{"license.html":{}}}],["subscribe(choic",{"_index":136,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["substanti",{"_index":471,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":368,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":30,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["templat",{"_index":66,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["test",{"_index":427,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":428,"title":{},"body":{"index.html":{}}}],["text",{"_index":33,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["textarea",{"_index":28,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{},"index.html":{}}}],["textarea.dispatchevent(new",{"_index":155,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.focu",{"_index":160,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.selectionstart",{"_index":147,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.setselectionrange(setcursorat",{"_index":159,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.valu",{"_index":141,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea[mwltextinputautocomplete],input[type=\"text\"][mwltextinputautocomplet",{"_index":43,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["textinputautocompletecontainercompon",{"_index":170,"title":{"components/TextInputAutocompleteContainerComponent.html":{}},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletedirect",{"_index":45,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemenucompon",{"_index":32,"title":{"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemodul",{"_index":293,"title":{"modules/TextInputAutocompleteModule.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{}}}],["this._choic",{"_index":263,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this._choices[index",{"_index":281,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.activechoic",{"_index":267,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices.indexof(this.activechoic",{"_index":272,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices[index",{"_index":273,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choiceselected.emit",{"_index":161,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.menucompon",{"_index":123,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.dropdownmenuel",{"_index":282,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.children[index",{"_index":286,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.getboundingclientrect",{"_index":284,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.elm.nativeel",{"_index":129,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.elm.nativeelement.selectionstart",{"_index":110,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.getchoicelabel(choic",{"_index":138,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.hidemenu",{"_index":107,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.injector",{"_index":126,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu",{"_index":105,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.lastcaretposit",{"_index":146,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.triggercharacterposit",{"_index":143,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.changedetectorref.detectchang",{"_index":114,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.destroy",{"_index":165,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choic",{"_index":111,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceload",{"_index":112,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceloaderror",{"_index":116,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.posit",{"_index":133,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.selectchoic",{"_index":134,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.lastcaretposit",{"_index":120,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden$.next",{"_index":166,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden.emit",{"_index":167,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menushown.emit",{"_index":163,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.scrolltochoice(index",{"_index":274,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.selectchoice.next(this.activechoic",{"_index":279,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.showmenu",{"_index":101,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.triggercharact",{"_index":100,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.viewcontainerref.createcompon",{"_index":124,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["through",{"_index":376,"title":{},"body":{"index.html":{}}}],["top",{"_index":131,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["tort",{"_index":491,"title":{},"body":{"license.html":{}}}],["trackbyid",{"_index":230,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["tree",{"_index":172,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["trigger",{"_index":48,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharact",{"_index":51,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharacterposit",{"_index":91,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["tslint:dis",{"_index":87,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["typeof",{"_index":250,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposit",{"_index":283,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposition.bottom",{"_index":290,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["undefin",{"_index":93,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["updat",{"_index":154,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["upgrad",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":64,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":400,"title":{},"body":{"index.html":{}}}],["valu",{"_index":140,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["value.slice(0",{"_index":144,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value.slice(caretposit",{"_index":148,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value[this.menu.triggercharacterposit",{"_index":106,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["var",{"_index":186,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["version",{"_index":311,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":407,"title":{},"body":{"index.html":{}}}],["view",{"_index":331,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["viewchild",{"_index":245,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewchild('dropdownmenu",{"_index":259,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewcontainerref",{"_index":25,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["void",{"_index":258,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["w",{"_index":57,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["warranti",{"_index":474,"title":{},"body":{"license.html":{}}}],["whether",{"_index":488,"title":{},"body":{"license.html":{}}}],["without",{"_index":401,"title":{},"body":{"index.html":{},"license.html":{}}}],["y",{"_index":219,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ChoiceSelectedEvent.html":{"url":"interfaces/ChoiceSelectedEvent.html","title":"interface - ChoiceSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChoiceSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choice\n                                \n                                \n                                        insertedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choice\n                                    \n                                \n                                \n                                    \n                                        choice:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insertedAt\n                                    \n                                \n                                \n                                    \n                                        insertedAt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n      const lineHeight = +getComputedStyle(\n        this.elm.nativeElement\n      ).lineHeight!.replace(/px$/, '');\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteContainerComponent.html":{"url":"components/TextInputAutocompleteContainerComponent.html","title":"component - TextInputAutocompleteContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-container\n            \n\n\n            \n                styles\n                \n    :host {\n      position: relative;\n      display: block;\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-container',\n  styles: [\n    `\n    :host {\n      position: relative;\n      display: block;\n    }\n  `\n  ],\n  template: ''\n})\nexport class TextInputAutocompleteContainerComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TextInputAutocompleteDirective.html":{"url":"directives/TextInputAutocompleteDirective.html","title":"directive - TextInputAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TextInputAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                findChoices\n                            \n                            \n                                getChoiceLabel\n                            \n                            \n                                menuComponent\n                            \n                            \n                                searchRegexp\n                            \n                            \n                                triggerCharacter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choiceSelected\n                            \n                            \n                                menuHidden\n                            \n                            \n                                menuShown\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                            \n                                keypress\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, injector: Injector, elm: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/text-input-autocomplete.directive.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        findChoices\n                    \n                    \n                        A function that accepts a search string and returns an array of choices. Can also return a promise.\n\n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        getChoiceLabel\n                    \n                    \n                        A function that formats the selected choice once selected.\n\n                            \n                            Type:    function\n\n                            \n                        \n                            Default value: choice => choice\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuComponent\n                    \n                    \n                        The menu component to show with available options.\nYou can extend the built in TextInputAutocompleteMenuComponent component to use a custom template\n\n                        \n                            Default value: TextInputAutocompleteMenuComponent\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchRegexp\n                    \n                    \n                        The regular expression that will match the search text after the trigger character\n\n                        \n                            Default value: /^\\w*$/\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerCharacter\n                    \n                    \n                        The character that will trigger the menu to appear\n\n                        \n                            Default value: '@'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:35\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        choiceSelected\n                    \n                    \n                        Called when a choice is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuHidden\n                    \n                    \n                        Called when the options menu is hidden\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuShown\n                    \n                    \n                        Called when the options menu is shown\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:51\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:142\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target.value' \n                        \n                    \n                \n                    \ninput(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keypress\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.key' \n                        \n                    \n                \n                    \nkeypress(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n      const lineHeight = +getComputedStyle(\n        this.elm.nativeElement\n      ).lineHeight!.replace(/px$/, '');\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteMenuComponent.html":{"url":"components/TextInputAutocompleteMenuComponent.html","title":"component - TextInputAutocompleteMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-menu\n            \n\n\n            \n                styles\n                \n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    \n            \n\n            \n                template\n                 0\"\n  #dropdownMenu\n  class=\"dropdown-menu\"\n  [style.top.px]=\"position?.top\"\n  [style.left.px]=\"position?.left\">\n  \n    \n      {{ choice }}\n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChoice\n                            \n                            \n                                choiceLoadError\n                            \n                            \n                                choiceLoading\n                            \n                            \n                                dropdownMenuElement\n                            \n                            \n                                position\n                            \n                            \n                                searchText\n                            \n                            \n                                selectChoice\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.ArrowDown\n                            \n                            \n                                document:keydown.ArrowUp\n                            \n                            \n                                document:keydown.Enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowDown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowDown(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowUp\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowUp(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.Enter\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.Enter(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeChoice:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoadError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoadError:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownMenuElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dropdownMenuElement:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectChoice:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackById\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackById:     \n\n                    \n                \n                    \n                        \n                            Default value : (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        choices\n                    \n                \n\n                \n                    \n                        getchoices()\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:53\n                                \n                            \n\n                \n                    \n                        setchoices(choices: [])\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            choices\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-menu',\n  template: `\n     0\"\n      #dropdownMenu\n      class=\"dropdown-menu\"\n      [style.top.px]=\"position?.top\"\n      [style.left.px]=\"position?.left\">\n      \n        \n          {{ choice }}\n        \n      \n    \n  `,\n  styles: [\n    `\n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    `\n  ]\n})\nexport class TextInputAutocompleteMenuComponent {\n  @ViewChild('dropdownMenu') dropdownMenuElement: ElementRef;\n  position: { top: number; left: number };\n  selectChoice = new Subject();\n  activeChoice: any;\n  searchText: string;\n  choiceLoadError: any;\n  choiceLoading = false;\n  private _choices: any[];\n  trackById = (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice;\n\n  set choices(choices: any[]) {\n    this._choices = choices;\n    if (choices.indexOf(this.activeChoice) === -1 && choices.length > 0) {\n      this.activeChoice = choices[0];\n    }\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index + 1]) {\n      this.scrollToChoice(index + 1);\n    }\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index - 1]) {\n      this.scrollToChoice(index - 1);\n    }\n  }\n\n  @HostListener('document:keydown.Enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    if (this.choices.indexOf(this.activeChoice) > -1) {\n      event.preventDefault();\n      this.selectChoice.next(this.activeChoice);\n    }\n  }\n\n  private scrollToChoice(index: number) {\n    this.activeChoice = this._choices[index];\n    if (this.dropdownMenuElement) {\n      const ulPosition = this.dropdownMenuElement.nativeElement.getBoundingClientRect();\n      const li = this.dropdownMenuElement.nativeElement.children[index];\n      const liPosition = li.getBoundingClientRect();\n      if (liPosition.top  ulPosition.bottom) {\n        li.scrollIntoView(false);\n      }\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\"  #dropdownMenu  class=\"dropdown-menu\"  [style.top.px]=\"position?.top\"  [style.left.px]=\"position?.left\">            {{ choice }}      '\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextInputAutocompleteModule.html":{"url":"modules/TextInputAutocompleteModule.html","title":"module - TextInputAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TextInputAutocompleteModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/text-input-autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TextInputAutocompleteContainerComponent\n                            \n                            \n                                TextInputAutocompleteDirective\n                            \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TextInputAutocompleteContainerComponent\n                            \n                            \n                                    TextInputAutocompleteDirective\n                            \n                            \n                                    TextInputAutocompleteMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputAutocompleteDirective } from './text-input-autocomplete.directive';\nimport { TextInputAutocompleteContainerComponent } from './text-input-autocomplete-container.component';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\n\n@NgModule({\n  declarations: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  entryComponents: [TextInputAutocompleteMenuComponent]\n})\nexport class TextInputAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.3.0 (2018-07-08)\nFeatures\n\nadd a component selector to the dropdown menu (c9ff811), closes #8\n\n\n0.2.1 (2018-06-16)\nBug Fixes\n\nmenu: scroll active item into view when using arrow keys (de22714), closes #6\n\n\n0.2.0 (2018-05-14)\nFeatures\n\nadd max height and scrollbar to menu (11a32ad)\nupgrade to angular 6 (8d8af83)\n\nBREAKING CHANGES\n\nangular 6 or higher is now required to use this package\n\n\n0.1.2 (2018-05-05)\nBug Fixes\n\nallow angular 6 peer dependency (4e02a45)\n\n\n0.1.1 (2018-01-10)\nBug Fixes\n\nallow the package to be compiled with fullTemplateTypecheck (d2b7cd1)\n\n\n0.1.0 (2017-10-09)\nFeatures\n\ninitial implementation (f8cf905)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            textarea-caret : ^3.1.0\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >=6.0.0 \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular text input autocomplete\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nA angular 6+ directive for adding autocomplete functionality to text input elements, built around composability\nInstallation\nInstall through npm:\nnpm install --save angular-text-input-autocompleteFor older browsers you will need the keyboardevent-key-polyfill polyfill:\nnpm install --save keyboardevent-key-polyfillThen include in your apps module:\nimport { polyfill as keyboardEventKeyPolyfill } from 'keyboardevent-key-polyfill';\nimport { NgModule } from '@angular/core';\nimport { TextInputAutocompleteModule } from 'angular-text-input-autocomplete';\n\nkeyboardEventKeyPolyfill();\n\n@NgModule({\n  imports: [TextInputAutocompleteModule]\n})\nexport class MyModule {}Finally use in one of your apps components:\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-demo-app',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class DemoComponent {\n  formControlValue = '';\n\n  findChoices(searchText: string) {\n    return ['John', 'Jane', 'Jonny'].filter(item =>\n      item.toLowerCase().includes(searchText.toLowerCase())\n    );\n  }\n\n  getChoiceLabel(choice: string) {\n    return `@${choice} `;\n  }\n}You may also find it useful to view the demo source.\nUsage without a module bundler\n\n\n    // everything is exported angularTextInputAutocomplete namespace\nDocumentation\nAll documentation is auto-generated from the source via compodoc and can be viewed here:\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/docs/\nRelated\nangular-text-input-highlight - a component for highlighting parts of a textarea\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\n\nBump the version in package.json (once the module hits 1.0 this will become automatic)\n\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TextInputAutocompleteModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
